<?xml version="1.0" encoding="UTF-8" ?>
<dt-option library="RowGroup">
	<name>rowGroup</name>
	<summary>Enable and configure the RowGroup extension for DataTables</summary>
	<since>RowGroup 1.0.0</since>

	<type type="boolean">
		<description>
			As a boolean value this property will enable RowGroup on the DataTable that is being created. `true` will enable RowGroup using the default data source of `0`, while `false` will not.

			This is a short-cut option to enable RowGroup with the default configuration options. Customisations can be made by giving this parameter as an object, see below.
		</description>
	</type>

	<type type="object">
		<description>
			If given as an object, RowGroup will be enabled on the target DataTable, with the RowGroup defaults (`$.fn.dataTable.RowGroup.defaults`) extended, and potentially overwritten, by the options provided in this object. This is how RowGroup can be configured on an individual table basis, or through the defaults.
		</description>
	</type>

	<default value="undefined">
		RowGroup will not be initialised by default
	</default>

	<description>
		RowGroup is an extension for DataTables that provides grouping capabilities (like all other DataTables extensions, the clue is in the name!). A data point in the table's data is used to group information and then display grouping rows before and / or after the group, with options to customise the display of those rows.

		This option provides the ability to enable and configure RowGroup for DataTables. In its simplest form as the boolean `true` it will enable RowGroup with the default configuration options (as defined by `$.fn.dataTable.RowGroup.defaults`). However, it is more likely that you will wish to use it as an object to provide custom configuration options, particularly for the data parameter to use for the grouping (`-init rowGroup.dataSrc`).

		Please note that as with all other configuration options for RowGroup, this option is an extension to the [default set of DataTables options](/reference/option). This property should be set in the DataTables initialisation object.
	</description>

	<example title="Enable row grouping"><![CDATA[

$('#myTable').DataTable( {
	rowGroup: true
} );

]]></example>

	<example title="Enable row grouping with a grouping data property specified"><![CDATA[

$('#myTable').DataTable( {
	rowGroup: {
		dataSrc: 'group'
	}
} );

]]></example>

</dt-option>