<?xml version="1.0" encoding="UTF-8" ?>
<dt-api library="RowGroup">
	<name>rowGroup().enable()</name>
	<summary>Enable or disable RowGroup's interaction with the table</summary>
	<since>1.0.0</since>

	<type type="function">
	<name>rowGroup().enable()</name>
		<signature>rowGroup().enable( [ enable ] )</signature>
		<description>
			Allows the row grouping action to be dynamically enabled, or optionally disabled.
		</description>
		<parameter name="enable" type="boolean" default="true">
			This option can be given as the following values:

			* `true` - Enable RowGroup
			* `false` - Disable RowGroup (`-api rowGroup().disable()`)
		</parameter>
		<returns type="DataTables.Api">DataTables API instance</returns>
	</type>

	<description>
		This method can be used to dynamically enable the row grouping feature offered by the RowGroup extension for DataTables, and also optionally to disable it using a toggle flag. This can be useful for cases where you want the end user to be able to toggle grouping, and optionally to switch between the grouping used for the table.
		
		Please note that the visual effect for grouping being either enabled or disabled is not shown until the DataTable is redrawn. This would typically be done by calling the `-api draw()` method.
	</description>

	<example title="Enable row grouping"><![CDATA[

var table = $('#example').DataTable( {
	rowGroup: {
		enable: false
	}
} );

table.rowGroup().enable().draw();

]]></example>

	<related>-init rowGroup.enable</related>
	<related>-api rowGroup().enabled()</related>
	<related>-api rowGroup().enable()</related>
	<related>-api rowGroup().disable()</related>
</dt-api>
