<?xml version="1.0" encoding="UTF-8" ?>
<dt-example table-type="ajax" order="5">

<css lib="datatables rowgroup"/>
<js lib="jquery datatables rowgroup">
<![CDATA[

$(document).ready(function() {
	$('#example').DataTable( {
		ajax: '../../../../examples/ajax/data/objects.txt',
		columns: [
			{ data: 'name' },
			{ data: 'position' },
			{ data: 'office' },
			{ data: 'extn' },
			{ data: 'start_date' },
			{ data: 'salary' }
		],
		order: [[2, 'asc']],
		rowGroup: {
			dataSrc: 'office'
		}
	} );
} );

]]>
</js>

<title lib="RowGroup">Ajax with objects</title>

<info><![CDATA[

The majority of the RowGroup examples make use of an array data source since they are reading data from an HTML table. However, it is quite possible to make use of objects as well, and in fact this often makes the most sense when using row grouping, since it is easy to identify the data point to use for grouping.

This example demonstrates Ajax loading of object based data for the table, with the `-init rowGroup.dataSrc` option used to group by the _Office_ column.

]]></info>

</dt-example>

